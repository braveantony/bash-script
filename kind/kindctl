Descriptions:
  啟動或關閉 Kind Clusters

Usage:
  kindctl [options] <Cluster Name>

Available options:
    start:
        啟動指定的 Kind 叢集。
    stop:
        關閉指定的 Kind 叢集。
    -h|--help:
        show this help text.

Examples:
  # 啟動 c30 叢集的所有 nodes
  ./kindctl start c30

  # 關閉 c30 叢集的所有 nodes
  ./kindctl stop c30
rancher@sle-micro:~>
rancher@sle-micro:~> cat kindctl
#!/bin/bash

#set -x

if ! which podman &> /dev/null; then
  echo "podman command not found" && exit 1
fi

if ! command -v kind &> /dev/null; then
    echo "kind command not found, please install kind to use this script."
    exit 1
fi

# Check KIND_EXPERIMENTAL_PROVIDER
EXPERIMENTAL_PROVIDER=$(sudo kind get clusters 2>&1 | grep -ow 'podman')
EXPERIMENTAL_PROVIDER_nerdctl=$(sudo kind get clusters 2>&1 | grep -ow 'nerdctl')
[[ "$EXPERIMENTAL_PROVIDER_nerdctl" == "nerdctl" ]] && echo "nerdctl is currently not supported." && exit 1
[[ -z "$EXPERIMENTAL_PROVIDER" ]] && EXPERIMENTAL_PROVIDER="docker"

usage() {
  cat <<EOF
Descriptions:
  啟動或關閉 Kind Clusters

Usage:
  $(basename "${BASH_SOURCE[0]}") [options] <Cluster Name>

Available options:
    start:
        啟動指定的 Kind 叢集。
    stop:
        關閉指定的 Kind 叢集。
    -h|--help:
        show this help text.

Examples:
  # 啟動 c30 叢集的所有 nodes
  ./kindctl start c30

  # 關閉 c30 叢集的所有 nodes
  ./kindctl stop c30
EOF
  exit 0
}

Start_Kind_Cluster() {
  if ! sudo kind get clusters 2> /dev/null | grep -q "$Cluster"; then
    echo ""$Cluster" Cluster not found." && exit 1
  else
    nodes=$(sudo kind get nodes --name "$Cluster" 2> /dev/null)
    sudo "$EXPERIMENTAL_PROVIDER" start $nodes &> /dev/null
    for i in $nodes
    do
      Status=$(sudo "$EXPERIMENTAL_PROVIDER" ps -a --format '{{.Status}}' --filter "name=${i}" 2> /dev/null | grep -ow '^Up')
      [[ "$Status" != "Up" ]] && echo "Start $i nodes Failed." && exit 1
    done
    echo "All nodes in $Cluster Cluster are Running."
  fi
}

Stop_Kind_Cluster() {
  if ! sudo kind get clusters 2> /dev/null | grep -q "$Cluster"; then
    echo ""$Cluster" not found." && exit 1
  else
    nodes=$(sudo kind get nodes --name "$Cluster" 2> /dev/null)
    sudo "$EXPERIMENTAL_PROVIDER" stop $nodes &> /dev/null
    for i in $nodes
    do
      Status=$(sudo "$EXPERIMENTAL_PROVIDER" ps -a --format '{{.Status}}' --filter "name=${i}" 2> /dev/null | grep -wo "^Exited")
      [[ "$Status" != "Exited" ]] && echo "Stop $i nodes Failed." && exit 1
    done
    echo "All nodes in $Cluster Cluster are Stopped."
  fi
}

[[ "$#" -eq "0" ]] && usage

while [[ "$#" -gt "0" ]]
do
  option="$1"
  case $option in
    start)
      Cluster="$2"
      Start_Kind_Cluster
      shift
      shift
    ;;
    stop)
      Cluster="$2"
      Stop_Kind_Cluster
      shift
      shift
    ;;
    *)
      usage
    ;;
  esac
done
